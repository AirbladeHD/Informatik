import math

def preHash(string):

    byteLen = 512

    byte = string.encode()
    bytes = ""
    for b in byte:
        bytes = bytes + str(b)

    newBytes = ""
    newByte = 0
    factor = 1
    
    if(len(bytes) < byteLen):
        for i in bytes:
            factor = factor + int(i)
        for i in bytes:
            newByte = int(i) * factor
            factor = factor + int(i)
            newBytes = newBytes + str(newByte)
        bytes = str(newBytes)
        while(len(bytes) < byteLen):
            for i in bytes:
                newByte = int(i) * factor
                #factor = factor + int(i)
                newBytes = newBytes + str(newByte)
            bytes = str(newBytes)
    else:
        sub = bytes[-513:-1]
        while(len(str(bytes)) > byteLen):
            bytes = int(bytes) // int(sub)

    bytes = str(bytes)
    sub = bytes[-513:-1]

    while(len(str(bytes)) > byteLen):
        bytes = int(bytes) // int(sub)

    bytes = str(bytes)

    while(len(bytes) < byteLen):
            if(len(bytes) < 9):
                if(len(bytes) == 1):
                    lastChar = int(bytes[-1])
                else:
                    lastChar = int(bytes[-2:-1])
                secLastChar = int(bytes[-1])
            else:
                lastChar = int(bytes[-5:-1])
                secLastChar = int(bytes[-9:-5])
            if(lastChar == 0):
                if(len(bytes) < 5):
                    lastChar = int(bytes[-1])
                else:
                    lastChar = int(bytes[0:4])
            if(secLastChar == 0):
                if(len(bytes) < 9):
                    secLastChar = int(bytes[-1])
                else:
                    secLastChar = int(bytes[4:8])
            newChar = lastChar + secLastChar
            bytes = bytes + str(newChar)

    while(len(bytes) > byteLen):
            lastChar = int(bytes[-3:-1])
            secLastChar = int(bytes[-5:-3])
            if(lastChar == 0):
                lastChar = int(bytes[0:2])
            if(secLastChar == 0):
                secLastChar = int(bytes[2:4])
            if(lastChar > secLastChar):
                newChar = lastChar - secLastChar
            else:
                newChar = secLastChar - lastChar
            byteSub = bytes[-4:-1][::-1]
            bytes = bytes[::-1]
            bytes = bytes.replace(str(byteSub), str(newChar), 1)
            bytes = bytes[::-1]

    blockCount = math.ceil(byteLen / 8)
    blocks = []
    index = 0
    counter = 1
    
    while(index < byteLen):
        blocks.append(bytes[index:counter * blockCount])
        index = index + blockCount
        counter = counter + 1

    return blocks

def compress(blocks):

    primzahlen = [23, 29, 31, 37, 41, 43, 47, 53]
    checksums = []
    
    c = 0

    for block in blocks:
        checksum = 0
        for i in block:
            checksum = checksum + int(i)
        if(checksum%2 == 0):
            checksum = math.ceil(checksum * math.sqrt(primzahlen[c]))
        c += 1
        checksums.append(checksum)

    factor = 1

    for e in checksums:
        for f in str(e):
            factor = factor + int(f)
        c = e * factor * factor
        if(len(str(c))<9):
            c = c + 100000000
        #print(factor)
        checksums[checksums.index(e)] = c

    dig = None

    for h in checksums:
        blockHex = '{:05x}'.format(h)
        if(dig == None):
            dig = "duke$" + str(blockHex)
        else:
            dig = dig + str(blockHex)

    return dig

def hash(string):
    pre = preHash(string)
    hash = compress(pre)
    while(not len(str(hash)) == 61):
        pre = preHash(hash)
        hash = compress(pre)
    return hash

#print(hash("B"))
#print(hash("b"))
#print(hash("Hello World"))
#print(hash("Hello WorlD"))
#print(hash("Hello World!"))
#print(hash("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"))
#print(hash(""))
#print(hash(""))